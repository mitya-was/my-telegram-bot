/**
 * –¢–µ—Å—Ç–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º–∏
 * Test function for system verification
 */

/**
 * –¢–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–≥–æ–≤–æ—Ä—É –∑ —Ç–µ—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
 */
function testCreateContract() {
  Logger.log('=== –¢–ï–°–¢ –°–¢–í–û–†–ï–ù–ù–Ø –î–û–ì–û–í–û–†–£ ===');
  
  // –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
  const testFormData = {
    contractNumber: 'TEST-001',
    timestamp: new Date(),
    client: '–¢–û–í "–¢–µ—Å—Ç–æ–≤–∞ –ö–æ–º–ø–∞–Ω—ñ—è"',
    activityType: 'IT –ø–æ—Å–ª—É–≥–∏',
    director: '–Ü–≤–∞–Ω–µ–Ω–∫–æ –Ü–≤–∞–Ω –Ü–≤–∞–Ω–æ–≤–∏—á',
    edrpou: '12345678',
    description: '–†–æ–∑—Ä–æ–±–∫–∞ –≤–µ–±-—Å–∞–π—Ç—É —Ç–∞ –º–æ–±—ñ–ª—å–Ω–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É',
    amount: '75000',
    performer: 'IT Company LLC'
  };
  
  try {
    Logger.log('–ö—Ä–æ–∫ 1: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä—É...');
    const contractNumber = generateContractNumber();
    testFormData.contractNumber = contractNumber;
    Logger.log('‚úÖ –ù–æ–º–µ—Ä –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ:', contractNumber);
    
    Logger.log('–ö—Ä–æ–∫ 2: –î–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ —Ç–∞–±–ª–∏—Ü—ñ...');
    addToSpreadsheet(testFormData);
    Logger.log('‚úÖ –î–æ–¥–∞–Ω–æ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ');
    
    Logger.log('–ö—Ä–æ–∫ 3: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–ø–∫–∏...');
    const folderUrl = createFolderStructure(testFormData);
    Logger.log('‚úÖ –ü–∞–ø–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞:', folderUrl);
    
    Logger.log('–ö—Ä–æ–∫ 4: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –¥–æ–≥–æ–≤–æ—Ä—É...');
    const contractUrl = generateContract(testFormData, folderUrl);
    Logger.log('‚úÖ –î–æ–≥–æ–≤—ñ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–æ:', contractUrl);
    
    Logger.log('–ö—Ä–æ–∫ 5: –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏...');
    updateSpreadsheetWithLinks(testFormData.contractNumber, folderUrl, contractUrl);
    Logger.log('‚úÖ –¢–∞–±–ª–∏—Ü—è –æ–Ω–æ–≤–ª–µ–Ω–∞');
    
    Logger.log('–ö—Ä–æ–∫ 6: –í—ñ–¥–ø—Ä–∞–≤–∫–∞ Telegram —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è...');
    sendTelegramNotification(testFormData, contractUrl);
    Logger.log('‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ');
    
    Logger.log('üéâ –¢–ï–°–¢ –ü–†–û–ô–®–û–í –£–°–ü–Ü–®–ù–û!');
    Logger.log(`üìã –ù–æ–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä—É: ${testFormData.contractNumber}`);
    
    return {
      success: true,
      contractNumber: testFormData.contractNumber,
      folderUrl: folderUrl,
      contractUrl: contractUrl
    };
    
  } catch (error) {
    Logger.log('‚ùå –ü–û–ú–ò–õ–ö–ê –í –¢–ï–°–¢–Ü:', error.toString());
    Logger.log('Stack trace:', error.stack);
    
    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –≤ Telegram
    sendQuickTelegramMessage(`‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ —Ç–µ—Å—Ç—ñ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–≥–æ–≤–æ—Ä—É:\n${error.toString()}`);
    
    return {
      success: false,
      error: error.toString()
    };
  }
}

/**
 * –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Telegram
 */
function testTelegramConnection() {
  Logger.log('=== –¢–ï–°–¢ –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø –î–û TELEGRAM ===');
  
  try {
    const testMessage = `üß™ –¢–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Telegram\n\n‚è∞ –ß–∞—Å: ${new Date().toLocaleString()}\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∞—Ü—é—î!`;
    
    sendQuickTelegramMessage(testMessage);
    
    Logger.log('‚úÖ Telegram –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
    return true;
    
  } catch (error) {
    Logger.log('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Telegram:', error.toString());
    return false;
  }
}

/**
 * –¢–µ—Å—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏
 */
function testSystemInitialization() {
  Logger.log('=== –¢–ï–°–¢ –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á –°–ò–°–¢–ï–ú–ò ===');
  
  try {
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å–∏—Å—Ç–µ–º—É
    initializeSystem();
    
    Logger.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞');
    return true;
    
  } catch (error) {
    Logger.log('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:', error.toString());
    return false;
  }
}

/**
 * –ü–æ–≤–Ω–∏–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º–∏
 */
function runFullSystemTest() {
  Logger.log('=== –ü–û–í–ù–ò–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–ò ===');
  
  const results = {
    telegram: false,
    initialization: false,
    contractCreation: false
  };
  
  try {
    // –¢–µ—Å—Ç 1: Telegram
    Logger.log('–¢–µ—Å—Ç 1: –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Telegram...');
    results.telegram = testTelegramConnection();
    
    // –¢–µ—Å—Ç 2: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    Logger.log('–¢–µ—Å—Ç 2: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏...');
    results.initialization = testSystemInitialization();
    
    // –¢–µ—Å—Ç 3: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–≥–æ–≤–æ—Ä—É
    Logger.log('–¢–µ—Å—Ç 3: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–≥–æ–≤–æ—Ä—É...');
    const contractTest = testCreateContract();
    results.contractCreation = contractTest.success;
    
    // –ü—ñ–¥—Å—É–º–æ–∫
    const allPassed = results.telegram && results.initialization && results.contractCreation;
    
    const summary = `
üß™ –†–ï–ó–£–õ–¨–¢–ê–¢–ò –¢–ï–°–¢–£–í–ê–ù–ù–Ø –°–ò–°–¢–ï–ú–ò:

‚úÖ Telegram: ${results.telegram ? '–ü–†–ê–¶–Æ–Ñ' : '‚ùå –ü–û–ú–ò–õ–ö–ê'}
‚úÖ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è: ${results.initialization ? '–ü–†–ê–¶–Æ–Ñ' : '‚ùå –ü–û–ú–ò–õ–ö–ê'}  
‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–≥–æ–≤–æ—Ä—É: ${results.contractCreation ? '–ü–†–ê–¶–Æ–Ñ' : '‚ùå –ü–û–ú–ò–õ–ö–ê'}

${allPassed ? 'üéâ –í–°–Ü –¢–ï–°–¢–ò –ü–†–û–ô–®–õ–ò –£–°–ü–Ü–®–ù–û!' : '‚ö†Ô∏è –Ñ –ø—Ä–æ–±–ª–µ–º–∏, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏'}

‚è∞ –ß–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: ${new Date().toLocaleString()}
    `;
    
    Logger.log(summary);
    sendQuickTelegramMessage(summary);
    
    return {
      allPassed: allPassed,
      results: results
    };
    
  } catch (error) {
    Logger.log('‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê –í –¢–ï–°–¢–£–í–ê–ù–ù–Ü:', error.toString());
    sendQuickTelegramMessage(`‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ:\n${error.toString()}`);
    
    return {
      allPassed: false,
      error: error.toString()
    };
  }
}